{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\eastpharmacy-react\\\\src\\\\Post\\\\PostRequestErrorHandling.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostRequestErrorHandling extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postId: null,\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    // POST request using fetch with error handling\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: \"React POST Request Example\"\n      })\n    };\n    fetch(\"https://reqres.in/invalid-url\", requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        postId: data.id\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error\n      });\n      console.error(\"There was an error!\", error);\n    });\n  }\n\n  render() {\n    const {\n      errorMessage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center m-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-header\",\n        children: \"POST Request with Error Handling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [\"Error: \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport { PostRequestErrorHandling };","map":{"version":3,"sources":["C:/xampp/htdocs/eastpharmacy-react/src/Post/PostRequestErrorHandling.js"],"names":["React","PostRequestErrorHandling","Component","constructor","props","state","postId","errorMessage","componentDidMount","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","isJson","get","includes","data","json","ok","error","message","status","Promise","reject","setState","id","catch","console","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,wBAAN,SAAuCD,KAAK,CAACE,SAA7C,CAAuD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAHe,KAAvB;AAKAC,IAAAA,KAAK,CAAC,+BAAD,EAAkCP,cAAlC,CAAL,CACGQ,IADH,CACQ,MAAOC,QAAP,IAAoB;AAAA;;AACxB,YAAMC,MAAM,4BAAGD,QAAQ,CAACP,OAAT,CACZS,GADY,CACR,cADQ,CAAH,0DAAG,sBAEXC,QAFW,CAEF,kBAFE,CAAf;AAGA,YAAMC,IAAI,GAAGH,MAAM,KAAK,MAAMD,QAAQ,CAACK,IAAT,EAAX,CAAnB,CAJwB,CAMxB;;AACA,UAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AAChB;AACA,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BR,QAAQ,CAACS,MAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD;;AAED,WAAKK,QAAL,CAAc;AAAExB,QAAAA,MAAM,EAAEgB,IAAI,CAACS;AAAf,OAAd;AACD,KAfH,EAgBGC,KAhBH,CAgBUP,KAAD,IAAW;AAChB,WAAKK,QAAL,CAAc;AAAEvB,QAAAA,YAAY,EAAEkB;AAAhB,OAAd;AACAQ,MAAAA,OAAO,CAACR,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,KAnBH;AAoBD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3B,MAAAA;AAAF,QAAmB,KAAKF,KAA9B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,8BAAmCE,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA/CoD;;AAkDvD,SAASN,wBAAT","sourcesContent":["import React from \"react\";\r\n\r\nclass PostRequestErrorHandling extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      postId: null,\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // POST request using fetch with error handling\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title: \"React POST Request Example\" }),\r\n    };\r\n    fetch(\"https://reqres.in/invalid-url\", requestOptions)\r\n      .then(async (response) => {\r\n        const isJson = response.headers\r\n          .get(\"content-type\")\r\n          ?.includes(\"application/json\");\r\n        const data = isJson && (await response.json());\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        this.setState({ postId: data.id });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ errorMessage: error });\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n    return (\r\n      <div className=\"card text-center m-3\">\r\n        <h5 className=\"card-header\">POST Request with Error Handling</h5>\r\n        <div className=\"card-body\">Error: {errorMessage}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { PostRequestErrorHandling };\r\n"]},"metadata":{},"sourceType":"module"}